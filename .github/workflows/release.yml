name: Release

on:
  push:
    branches:
      - master

jobs:
  release-please:
    name: Create Release
    outputs:
      source-resolver-released: ${{ steps.release.outputs.crates/source-resolver--release_created }}
      release-pr: ${{ steps.release.outputs.pr }}
      tag-name: ${{ steps.release.outputs.tag_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.NOIR_RELEASES_TOKEN }}
          command: manifest

  update-lockfile:
    name: Update lockfile
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release-pr }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: ${{ fromJSON(needs.release-please.outputs.release-pr).headBranchName }}
          token: ${{ secrets.NOIR_RELEASES_TOKEN }}

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.65.0

      - name: Update lockfile
        run: |
          cargo update --workspace

      - name: Configure git
        run: |
          git config user.name kevaundray
          git config user.email kevtheappdev@gmail.com

      - name: Commit updates
        run: |
          git add Cargo.lock
          git commit -m 'chore: Update lockfile'
          git push

  build-binaries:
    name: Build binaries
    needs: [release-please]
    if: ${{ needs.release-please.outputs.tag-name }}
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch to publish workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: publish.yml
          repo: noir-lang/noir
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: '{ "tag": "${{ needs.release-please.outputs.tag-name }}", "publish": true }'

  publish-wasm:
    name: Publish noir_wasm package
    needs: [release-please]
    if: ${{ needs.release-please.outputs.tag-name }}
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch to noir_wasm
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update.yml
          repo: noir-lang/noir_wasm
          ref: master
          token: ${{ secrets.NOIR_REPO_TOKEN }}
          inputs: '{ "noir-ref": "${{ needs.release-please.outputs.tag-name }}" }'

  publish-source-resolver:
    name: Publish Source Resolver to NPM
    needs: [release-please]
    if: ${{ needs.release-please.outputs.source-resolver-released }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build noir-source-resolver
        working-directory: ./crates/source-resolver
        run: npm run build

      - name: Update package.json version
        working-directory: ./crates/source-resolver
        run: npm version ${{ needs.release-please.outputs.tag-name }} --no-git-tag-version

      # - name: Publish to NPM
      #   working-directory: ./crates/source-resolver
      #   run: npm publish
      #   env:
      # NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
